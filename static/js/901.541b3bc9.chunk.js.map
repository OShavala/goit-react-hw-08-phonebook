{"version":3,"file":"static/js/901.541b3bc9.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contacts/ContactList.styled.js","components/Contacts/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/form/ContactForm.styled.js","components/form/ContactForm.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filters.filter;\n","import styled from 'styled-components';\n\nexport const ContForm = styled.div`\n  h1,\n  h2 {\n    text-align: center;\n    font-size: 28px;\n    color: #fff;\n    \n  }\n`;\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  margin: 0px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  -webkit-box-align: center;\n  align-items: center;\n  width: 100%;\n  padding: 0px 0px 0px 20px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(255, 255, 255);\n  \n`;\n\nexport const ContactIcon = styled.div`\n  margin-right: 15px;\n  border-radius: 4px;\n  width: 27px;\n  height: 27px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  svg {\n    width: 25px;\n    height: 25px;\n  }\n`;\n\nexport const ContactText = styled.p`\n  font-size: 18px;\n`;\n\nexport const ContactDelete = styled.button`\n  display: inline-block;\n  padding: 10px 12px;\n  margin: 0px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #391717;\n  color: rgb(255, 255, 255);\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.2;\n  letter-spacing: 0.03em;\n  cursor: pointer;\n\n \n\n  &:hover,\n  &:focus {\n    background-color: #fff;\n    color: #391717;\n  }\n\n  \n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectContactsFilter,\n} from '../../redux/contacts/selectors';\nimport { IoPersonOutline } from 'react-icons/io5';\n\nimport {\n  ContactsList,\n  ContactItem,\n  ContactIcon,\n  ContactText,\n  ContactDelete,\n} from './ContactList.styled';\n\n\nexport function ContactList() {\n  const contacts = useSelector(selectContacts);\n\n  const filterValue = useSelector(selectContactsFilter).toLowerCase();\n\n\n  const dispatch = useDispatch();\n\n  const handleDelete = evt => {\n    dispatch(deleteContact(evt.currentTarget.id));\n  };\n\n  const getVisibilityContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  const visibilityContacts = getVisibilityContacts();\n\n  return (\n    <ContactsList>\n      {visibilityContacts.map(contact => (\n        <ContactItem key={contact.id}>\n          <ContactIcon>\n            <IoPersonOutline />\n          </ContactIcon>\n          <ContactText>\n            {contact.name}: <span>{contact.number}</span>\n          </ContactText>\n          <ContactDelete type=\"button\" id={contact.id} onClick={handleDelete}>\n         Delete\n          </ContactDelete>\n        </ContactItem>\n      ))}\n    </ContactsList>\n  );\n}\n\n\n\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  padding: 0px;\n  margin: 0px 0px 10px;\n\n  input {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n    background-color: rgb(255, 255, 255);\n   \n    outline: none;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { FilterLabel } from './Filter.styled';\nimport { setFilterContacts } from '../../redux/contacts/filtersSlice';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const handlerFilter = evt => {\n    dispatch(setFilterContacts(evt.target.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" onChange={handlerFilter} />\n    </FilterLabel>\n  );\n}","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  max-width: 540px;\n`;\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  label {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n    padding: 0px;\n    \n  }\n\n  input {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 10px;\n    \n    border-radius: 5px;\n    background-color: rgb(255, 255, 255);\n     outline: none;\n  }\n`;\n\nexport const FormList = styled.ul`\n  padding: 0;\n  display: flex;\n`;\n\nexport const FormListItem = styled.li`\n  margin-right: 10px;\n  p {\n    margin-bottom: 8px;\n    font-size: 18px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  display: inline-block;\n  padding: 10px 20px;\n  margin: 0px auto;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(57, 23, 23);\n  color: rgb(255, 255, 255);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.2;\n  letter-spacing: 0.03em;\n  cursor: pointer;\n  margin-top: 20px;\n\n  &:hover,\n  &:focus {\n    background-color: #fff;\n    color: rgb(57, 23, 23);\n    cursor: pointer;\n  }\n\n  svg {\n    margin-right: 10px;\n    width: 18px;\n    height: 18px;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\n\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nimport { Form, FormList, FormListItem, FormButton } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  function handlerSubmit(evt) {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n\n    form.reset();\n  }\n\n  return (\n    <Form onSubmit={handlerSubmit}>\n      <FormList>\n        <FormListItem>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormListItem>\n        <FormListItem>\n          <p>Contact</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormListItem>\n      </FormList>\n\n      <FormButton type=\"submit\">\n       \n        Add contact\n      </FormButton>\n    </Form>\n  );\n};\n\nexport default ContactForm;","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Dna } from 'react-loader-spinner';\n\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { ContactList } from 'components/Contacts/ContactList';\n\nimport { Filter } from 'components/Filter/Filter';\n\nimport ContactForm from 'components/form/ContactForm';\nimport { selectIsLoading, selectError } from '../redux/contacts/selectors';\nimport { ContForm } from 'components/Contacts/ContactList.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContForm>\n      <h1>Your phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && (\n        <Dna\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"dna-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"dna-wrapper\"\n        />\n      )}\n      <ContactList />\n    </ContForm>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","filter","ContForm","styled","_templateObject","_taggedTemplateLiteral","ContactsList","_templateObject2","ContactItem","_templateObject3","ContactIcon","_templateObject4","ContactText","_templateObject5","ContactDelete","_templateObject6","ContactList","useSelector","filterValue","toLowerCase","dispatch","useDispatch","handleDelete","evt","deleteContact","currentTarget","id","visibilityContacts","contact","name","includes","_jsx","children","map","_jsxs","IoPersonOutline","number","type","onClick","FilterLabel","Filter","onChange","setFilterContacts","target","value","Form","FormList","FormListItem","FormButton","onSubmit","preventDefault","form","find","alert","concat","addContact","reset","pattern","title","required","useEffect","fetchContacts","ContactForm","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}